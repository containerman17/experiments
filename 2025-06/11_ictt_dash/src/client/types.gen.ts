// This file is auto-generated by @hey-api/openapi-ts

export type GetApiChainsData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/chains';
};

export type GetApiChainsResponses = {
    /**
     * Default Response
     */
    200: Array<{
        evmChainId: number;
        chainName: string;
        blockchainId: string;
        hasDebug: boolean;
        lastStoredBlockNumber: number;
        latestRemoteBlockNumber: number;
        txCount: number;
        projectedTxCount: number;
    }>;
};

export type GetApiChainsResponse = GetApiChainsResponses[keyof GetApiChainsResponses];

export type PostApiByEvmChainIdRpcData = {
    body?: {
        method: string;
        params?: Array<unknown>;
        id?: string | number | unknown;
        jsonrpc?: string;
    } | Array<{
        method: string;
        params?: Array<unknown>;
        id?: string | number | unknown;
        jsonrpc?: string;
    }>;
    path: {
        evmChainId: number;
    };
    query?: never;
    url: '/api/{evmChainId}/rpc';
};

export type PostApiByEvmChainIdRpcResponses = {
    /**
     * Default Response
     */
    200: {
        result?: unknown;
        error?: {
            code: number;
            message: string;
        };
        id?: string | number | unknown;
        jsonrpc?: string;
    } | Array<{
        result?: unknown;
        error?: {
            code: number;
            message: string;
        };
        id?: string | number | unknown;
        jsonrpc?: string;
    }>;
};

export type PostApiByEvmChainIdRpcResponse = PostApiByEvmChainIdRpcResponses[keyof PostApiByEvmChainIdRpcResponses];

export type GetApiReplicationChainsJsonData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/replication/chains.json';
};

export type GetApiReplicationChainsJsonResponses = {
    /**
     * Default Response
     */
    200: Array<{
        chainName: string;
        blockchainId: string;
        evmChainId: number;
        rpcConfig: {
            rpcUrl: string;
            requestBatchSize: number;
            maxConcurrentRequests: number;
            rps: number;
            rpcSupportsDebug: boolean;
            enableBatchSizeGrowth: boolean;
            blocksPerBatch: number;
        };
    }>;
};

export type GetApiReplicationChainsJsonResponse = GetApiReplicationChainsJsonResponses[keyof GetApiReplicationChainsJsonResponses];

export type GetApiByEvmChainIdStatsIcmGasUsageData = {
    body?: never;
    path: {
        evmChainId: string;
    };
    query?: {
        period?: '1d' | '7d' | '30d' | '1h';
        count?: number;
    };
    url: '/api/{evmChainId}/stats/icm-gas-usage';
};

export type GetApiByEvmChainIdStatsIcmGasUsageResponses = {
    /**
     * Default Response
     */
    200: {
        [key: string]: {
            name: string;
            evmChainId: number;
            values: Array<{
                sendCount: number;
                receiveCount: number;
                sendGasCost: number;
                receiveGasCost: number;
                totalGasCost: number;
                intervalTs: number;
            }>;
        };
    };
};

export type GetApiByEvmChainIdStatsIcmGasUsageResponse = GetApiByEvmChainIdStatsIcmGasUsageResponses[keyof GetApiByEvmChainIdStatsIcmGasUsageResponses];

export type GetApiIcttTransfersData = {
    body?: never;
    path?: never;
    query?: {
        startTs?: number;
        endTs?: number;
    };
    url: '/api/ictt/transfers';
};

export type GetApiIcttTransfersResponses = {
    /**
     * Default Response
     */
    200: Array<{
        homeChainBlockchainId: string;
        homeChainName: string;
        remoteChainBlockchainId: string;
        remoteChainName: string;
        direction: 'in' | 'out';
        coinAddress: string;
        transferCount: number;
        transferCoinsTotal: number;
    }>;
};

export type GetApiIcttTransfersResponse = GetApiIcttTransfersResponses[keyof GetApiIcttTransfersResponses];

export type GetApiByChainIdStatsTpsData = {
    body?: never;
    path: {
        chainId: string;
    };
    query?: {
        count?: number;
    };
    url: '/api/{chainId}/stats/tps';
};

export type GetApiByChainIdStatsTpsErrors = {
    /**
     * Default Response
     */
    404: {
        error?: string;
    };
};

export type GetApiByChainIdStatsTpsError = GetApiByChainIdStatsTpsErrors[keyof GetApiByChainIdStatsTpsErrors];

export type GetApiByChainIdStatsTpsResponses = {
    /**
     * Default Response
     */
    200: Array<{
        timestamp: number;
        txs: number;
        tps: number;
    }>;
};

export type GetApiByChainIdStatsTpsResponse = GetApiByChainIdStatsTpsResponses[keyof GetApiByChainIdStatsTpsResponses];

export type GetApiByChainIdStatsCumulativeTxsData = {
    body?: never;
    path: {
        chainId: string;
    };
    query?: {
        /**
         * Unix timestamp to get cumulative count at. If not provided, returns latest.
         */
        timestamp?: number;
    };
    url: '/api/{chainId}/stats/cumulative-txs';
};

export type GetApiByChainIdStatsCumulativeTxsErrors = {
    /**
     * Default Response
     */
    404: {
        error?: string;
    };
};

export type GetApiByChainIdStatsCumulativeTxsError = GetApiByChainIdStatsCumulativeTxsErrors[keyof GetApiByChainIdStatsCumulativeTxsErrors];

export type GetApiByChainIdStatsCumulativeTxsResponses = {
    /**
     * Default Response
     */
    200: {
        timestamp: number;
        cumulativeTxs: number;
    };
};

export type GetApiByChainIdStatsCumulativeTxsResponse = GetApiByChainIdStatsCumulativeTxsResponses[keyof GetApiByChainIdStatsCumulativeTxsResponses];

export type GetApiMetricsDailyMessageVolumeData = {
    body?: never;
    path?: never;
    query?: {
        days?: number;
    };
    url: '/api/metrics/dailyMessageVolume';
};

export type GetApiMetricsDailyMessageVolumeResponses = {
    /**
     * Default Response
     */
    200: Array<{
        timestamp: number;
        date: string;
        messageCount: number;
    }>;
};

export type GetApiMetricsDailyMessageVolumeResponse = GetApiMetricsDailyMessageVolumeResponses[keyof GetApiMetricsDailyMessageVolumeResponses];

export type GetApiByChainIdMetricsDailyMessageVolumeData = {
    body?: never;
    path: {
        chainId: string;
    };
    query?: {
        days?: number;
    };
    url: '/api/{chainId}/metrics/dailyMessageVolume';
};

export type GetApiByChainIdMetricsDailyMessageVolumeErrors = {
    /**
     * Default Response
     */
    404: {
        error?: string;
    };
};

export type GetApiByChainIdMetricsDailyMessageVolumeError = GetApiByChainIdMetricsDailyMessageVolumeErrors[keyof GetApiByChainIdMetricsDailyMessageVolumeErrors];

export type GetApiByChainIdMetricsDailyMessageVolumeResponses = {
    /**
     * Default Response
     */
    200: Array<{
        timestamp: number;
        date: string;
        messageCount: number;
        incomingCount: number;
        outgoingCount: number;
    }>;
};

export type GetApiByChainIdMetricsDailyMessageVolumeResponse = GetApiByChainIdMetricsDailyMessageVolumeResponses[keyof GetApiByChainIdMetricsDailyMessageVolumeResponses];

export type GetApiLeaderboardDayData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/leaderboard/day';
};

export type GetApiLeaderboardDayResponses = {
    /**
     * Default Response
     */
    200: Array<{
        fromChain: string;
        toChain: string;
        fromName: string;
        toName: string;
        messageCount: number;
    }>;
};

export type GetApiLeaderboardDayResponse = GetApiLeaderboardDayResponses[keyof GetApiLeaderboardDayResponses];

export type GetApiLeaderboardWeekData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/leaderboard/week';
};

export type GetApiLeaderboardWeekResponses = {
    /**
     * Default Response
     */
    200: Array<{
        fromChain: string;
        toChain: string;
        fromName: string;
        toName: string;
        messageCount: number;
    }>;
};

export type GetApiLeaderboardWeekResponse = GetApiLeaderboardWeekResponses[keyof GetApiLeaderboardWeekResponses];

export type GetApiStatsTpsData = {
    body?: never;
    path?: never;
    query?: {
        period?: '1d' | '7d' | '30d' | '1h';
    };
    url: '/api/stats/tps';
};

export type GetApiStatsTpsResponses = {
    /**
     * Default Response
     */
    200: Array<{
        name?: string;
        blockchainId: string;
        evmChainId: number;
        txs: number;
        tps: number;
    }>;
};

export type GetApiStatsTpsResponse = GetApiStatsTpsResponses[keyof GetApiStatsTpsResponses];

export type GetApiOpenapiJsonData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/openapi.json';
};

export type GetApiOpenapiJsonResponses = {
    /**
     * Default Response
     */
    200: unknown;
};

export type ClientOptions = {
    baseUrl: `${string}://${string}` | (string & {});
};